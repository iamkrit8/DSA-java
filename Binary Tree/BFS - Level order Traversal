class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null){
            return ans;
        }
        
        while(!que.isEmpty()){
            List<Integer> inner = new ArrayList<>();
            int size = que.size();
            for(int i = 0 ; i < size; i++){
                TreeNode current = que.poll();
            //printing the value of current node   
            if(current != null){
                inner.add(current.val);
            }
            //checking for left queue
            if(current.left != null){
                que.add(current.left);
            }
            
            //checking for right queue
            if(current.right != null){
                que.add(current.right);
            }
            }
            ans.add(inner);
        }
        return ans;
    }
}
