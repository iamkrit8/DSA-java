link - https://leetcode.com/problems/coin-change-2/
import java.util.*;
class Solution {
    public int change(int amount, int[] coins) {
        int n = coins.length;
        int[][] dp = new int[n][amount+1];
        for(int[] row : dp){
            Arrays.fill(row, -1);
        }
        
        return allways(coins, amount, n-1, dp);
    }
    static int allways(int[] nums, int target, int i, int[][] dp){
        if(i==0){
            if(target%nums[i]==0){
                return 1;
            }else return 0;
        }
        //dp
        if(dp[i][target]!= -1){
            return dp[i][target];
        }
        
        //not pick --
        int notpick = allways(nums, target, i-1, dp);
        
        //pick
        int pick = 0;
        if(target>= nums[i]){
            pick = allways(nums, target - nums[i], i, dp);
        }
        return dp[i][target] = pick + notpick;
    }
}
