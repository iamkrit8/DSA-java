*link*
https://leetcode.com/problems/unique-paths/
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] grid = new int[m][n];
        
        int[][] dp =  new int [m][n];
        for(int[] row : dp){
            Arrays.fill(row, -1);
        }
        
        
        return allpath(m-1, n-1, grid, dp);
        
    }
    static int allpath(int i, int j, int[][] grid, int[][] dp){
        if(i ==0 && j==0)return 1;
        if(i<0 || j<0)return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        
        int up = grid[i][j] + allpath(i-1, j, grid, dp);
        int left = grid[i][j] + allpath(i, j-1, grid, dp);
        
        int count = up + left;
        
        return dp[i][j] = count;
    } 
}
